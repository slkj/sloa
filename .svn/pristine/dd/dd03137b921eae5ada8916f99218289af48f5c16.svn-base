package cn.slkj.sloa.controller.order;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.miemiedev.mybatis.paginator.domain.Order;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;

import cn.slkj.hbsl.util.Const;
import cn.slkj.hbsl.util.Serialnumber;
import cn.slkj.hbsl.util.javaUtil.StringUtil;
import cn.slkj.sloa.entity.Orders;
import cn.slkj.sloa.entity.system.User;
import cn.slkj.sloa.service.OrderService;
import cn.slkj.sloa.util.easyuiUtil.EPager;
import cn.slkj.sloa.util.easyuiUtil.JsonResult;

@Controller
@RequestMapping("/order")
public class OrderController {
	@Autowired
	private OrderService orderService;

	@RequestMapping("/toOrderPage")
	public String toCallPage() {
		return "order/orderList";
	}

	@RequestMapping("/toOrderAdd")
	public String toOrderAdd() {
		return "order/orderAdd";
	}

	@RequestMapping(value = "/list", method = { RequestMethod.POST })
	public @ResponseBody EPager<Orders> list(HttpServletRequest request) {
		HashMap<String, Object> pageMap = new HashMap<String, Object>();
		int page = Integer.parseInt(request.getParameter("page"));
		int rows = Integer.parseInt(request.getParameter("rows"));
		String depid = request.getParameter("department");
		if (StringUtil.isEmpty(depid)) {
			HttpSession session = request.getSession();
			User u = (User) session.getAttribute(Const.SESSION_USER);
			depid = u.getDepartcode();
		}
		pageMap.put("depId", depid);
		pageMap.put("carNumber", request.getParameter("carNumber"));
		pageMap.put("endTime", request.getParameter("endTime"));
		pageMap.put("endTime1", request.getParameter("endTime1"));
		pageMap.put("purpose", request.getParameter("purpose"));
		pageMap.put("fees", request.getParameter("fees"));
		pageMap.put("number", request.getParameter("number"));

		pageMap.put("riqi", request.getParameter("riqi"));
		pageMap.put("riqi1", request.getParameter("riqi1"));

		// 排序
		String sort = request.getParameter("sort");
		String order = request.getParameter("order");
		String sortString = "";
		if (!StringUtil.isEmpty(sort) && !StringUtil.isEmpty(order)) {
			sortString = sort + "." + order;
		}
		if (StringUtil.isEmpty(sortString)) {
			sortString = "riqi.desc";
		}
		PageBounds pageBounds = new PageBounds(page, rows, Order.formString(sortString));

		List<Orders> list = orderService.getAll(pageMap, pageBounds);
		PageList pageList = (PageList) list;
		return new EPager<Orders>(pageList.getPaginator().getTotalCount(), list);
	}

	@ResponseBody
	@RequestMapping(value = "/save", method = { RequestMethod.POST })
	public JsonResult save(Orders orders, HttpServletRequest request) {

		int i;
		try {
			String orderNumber = Serialnumber.Getnum();
			orders.setOrderNumber(orderNumber);
			i = orderService.add(orders);

			if (i != -1) {
				return new JsonResult(true, "保存成功。");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new JsonResult(false, "保存失败！");
	}
}
